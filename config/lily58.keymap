/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE   &kp N1  &kp N2  &kp N3   &kp N4        &kp N5                      &kp N6  &kp N7            &kp N8             &kp N9   &kp N0    &kp MINUS
&kp LCTRL   &kp Q   &kp W   &kp E    &kp R         &kp T                       &kp Y   &kp U             &kp I              &kp O    &kp P     &kp BACKSPACE
&kp LSHIFT  &kp A   &kp S   &kp D    &kp F         &kp G                       &kp H   &kp J             &kp K              &kp L    &kp SEMI  &kp SQT
&kp TAB     &kp Z   &kp X   &kp C    &kp V         &kp B   &mo 1    &kp SPACE  &kp N   &kp M             &kp COMMA          &kp DOT  &kp FSLH  &kp CAPSLOCK
                            &kp ESC  &kp LEFT_ALT  &none   &mo 2    &kp RET    &to 3   &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp TILDE  &kp F1  &kp F2  &kp F3           &kp F4           &kp F5                           &kp F6    &kp F7          &kp F8            &kp F9           &kp F10        &kp F12
&kp LCTRL  &none   &none   &kp INSERT       &kp PRINTSCREEN  &kp PAGE_UP                      &kp HOME  &none           &kp UP_ARROW      &none            &kp BACKSLASH  &kp EQUAL
&kp LSHFT  &none   &none   &kp DELETE       &kp END          &kp PAGE_DOWN                    &kp END   &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW  &none          &kp RS(EQUAL)
&kt TAB    &none   &none   &kp LC(LA(DEL))  &trans           &kp LEFT_ALT   &trans    &trans  &trans    &none           &kp K_PLAY_PAUSE  &none            &kp LS(N7)     &none
                           &trans           &trans           &trans         &trans    &trans  &trans    &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans  &trans              &trans              &trans                                       &trans  &kp KP_NUMLOCK   &kp KP_DIVIDE    &kp KP_ASTERISK  &kp KP_MINUS  &trans
&none   &none   &none   &none               &kp LC(C)           &kp LC(V)                                    &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS   &trans
&none   &none   &none   &none               &kp LC(Z)           &kp LC(Y)                                    &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_EQUAL  &trans
&none   &none   &none   &kp LS(LA(LC(F8)))  &kp LC(LS(LA(F1)))  &kp LS(LA(LC(F2)))  &kp LC(LS(Z))    &trans  &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_ENTER  &none
                        &trans              &trans              &trans              &trans           &trans  &trans  &kp KP_NUMBER_0  &kp KP_DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3        &kp NUMBER_4  &kp NUMBER_5                           &trans  &trans  &trans  &trans  &trans  &kp N0
&kp LCTRL   &kp S         &kp J         &kp T               &kp C         &kp V                                  &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHIFT  &kp L         &kp R         &kp E               &kp B         &kp CAPS                               &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB     &kp Z         &kp LC(Z)     &kp LC(LS(LA(F1)))  &kp CAPSLOCK  &kp LCTRL     &kp ENTER       &trans   &trans  &trans  &trans  &trans  &trans  &kp DEL
                                        &kp ESC             &kp Q         &kp LEFT_ALT  &kp LEFT_ALT    &kp ESC  &to 0   &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
